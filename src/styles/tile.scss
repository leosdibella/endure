%tile {
    position: absolute;
}

%tile-highlighted {
    z-index: 2;
}

@each $theme, $color-map in $color-maps {
    @each $key, $color in $color-map {
        @if $key == 'foreground' {
            .#{$theme} .tile-grey {
                @extend %tile;
                background-color: $color;
            }
        } @else if ($key != 'background' && $key != 'midground') {
            .#{$theme} .tile-#{$key} {
                @extend %tile;
                background-color: $color;
            }
        }
    }
}

.tile-transparent {
    background-color: transparent;
}

.light {
    .tile-obscured {
        @extend %tile;
        background-color: map-get($light-colors, midground);
    }

    .tile-highlighted {
        @extend %tile-highlighted;
        box-shadow: 0px 1px 10px 4px rgba(0, 0, 0, 0.75);
    }

    .tile-highlighted-neighbor {
        @extend %tile;
    }
}


.dark {
    .tile-obscured {
        @extend %tile;
        background-color: map-get($dark-colors, midground);
    }

    .tile-highlighted {
        @extend %tile-highlighted;
        box-shadow: 0px 1px 10px 4px rgba(255, 255, 255, 0.75);
    }

    .tile-highlighted-neighbor {
        @extend %tile;
    }
}

.tile-boundary-none {
    border-radius: 50%;
}

.tile-boundary-all,
.tile-boundary-top-right-bottom,
.tile-boundary-right-bottom-left,
.tile-boundary-bottom-left-top,
.tile-boundary-top-right-left,
.tile-boundary-top-bottom,
.tile-boundary-right-left {
    border-radius: 0%;
}

.tile-boundary-top {
    border-radius: 0% 0% 50% 50%;
}

.tile-boundary-right {
    border-radius: 50% 0% 0% 50%;
}

.tile-boundary-bottom {
    border-radius: 50% 50% 0% 0%;
}

.tile-boundary-left {
    border-radius: 0% 50% 50% 0%;
}

.tile-boundary-right-bottom {
    border-radius: 50% 0% 0% 0%;
}

.tile-boundary-bottom-left {
    border-radius: 0% 50% 0% 0%;
}

.tile-boundary-top-left {
    border-radius: 0% 0% 50% 0%;
}

.tile-boundary-top-right {
    border-radius: 0% 0% 0% 50%;
}