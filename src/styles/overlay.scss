@each $mode in 
    game-over,
    new-game,
    player-name,
    paused,
    quit-confirmation,
    select-difficulty,
    high-scores,
    theme {
        .overlay-#{$mode}-text {
            @extend %global-flex-row;
            width: 100%;
            letter-spacing: 0.1em;
            justify-content: center;
            margin-bottom: 20px;
        }

        .overlay-container.dark .overlay {
            .overlay-#{$mode}-text {
                color: map-get($dark-colors, foreground);
            }
        }

        .overlay-container.light .overlay {
            .overlay-#{$mode}-text {
                color: map-get($light-colors, foreground);
            }
        }
}

%overlay-flex {
    @extend %global-flex-column;
    @extend %global-centering;
}

.overlay-container {
    @extend %global-full-view-container;
    position: absolute;
}

.overlay-button-panel {
    @extend %overlay-flex;
    margin-bottom: 10px;
}

.overlay-button {
    font-size: 30px;
    outline: none;
    cursor: pointer;
    margin: 10px;
    background: inherit;
    border: none;
    padding: 3px 20px 5px 20px;
    border-width: 1px;
}

.overlay-button:active,
.overlay-button:hover,
.overlay-button:focus {
    outline: none;
}

.dark.overlay-container {
    .overlay {
        background-color: rgba(0, 0, 0, .5);
    }

    .overlay .overlay-button-panel {
        button {
            color: map-get($dark-colors, foreground);
        }

        .overlay-selected-option {
            border-color: map-get($dark-colors, red);
        }
    }
}

.light.overlay-container {
    .overlay {
        background-color: rgba(150, 150, 150, .5);
    }

    .overlay .overlay-button-panel {  
        button {
            color: map-get($light-colors, foreground);
        }

        .overlay-selected-option {
            border-color: map-get($light-colors, red);
        }
    }
}

.overlay {
    @extend %overlay-flex;
    @extend %global-full-view-container;
    font-size: 120px;
    flex: 1;
    position: absolute;
    z-index: 3;
}

.overlay-selected-option {
    font-size: 32px;
    border-radius: 50%;
    border: 1px solid;
    padding: 20px 50px;
}

.overlay-high-score {
    @extend %global-flex-column;
    font-size: 20px;
    flex: 1;
    justify-content: space-between;
    align-items: center;
}

.overlay-high-scores-listings {
    @extend %global-flex-row;
    flex: 1;
    width: 100%;
    margin-bottom: 20px;
    justify-content: space-between;
    align-items: start;

    .overlay-high-scores-listing:first-child {
        padding: 0px 20px 0px $global-side-bar-width + 5;
    }

    .overlay-high-scores-listing:last-child {
        padding: 0px $global-side-bar-width + 5 0px 20px;
    }

    .overlay-high-scores-listing {
        flex-basis: 50%;

        .overlay-no-high-scores {
            text-align: center;
            font-size: 35px;
            padding: 10px 0px;
        }

        .overlay-high-scores-listing-title {
            text-align: center;
            border-bottom: 2px solid;
            margin-bottom: 10px;
            font-weight: bold;
            font-size: 40px;
            padding-bottom: 8px;
        }

        .overlay-high-score {
            border-bottom: 1px dashed;
            margin-bottom: 5px;
            font-size: 30px;
        }

        .overlay-high-score div {
            @extend %global-flex-row;
            flex: 1;
            width: 100%;
            justify-content: space-between;
            align-items: center;
        }
    }

    .dark.overlay-high-scores-listing {
        .overlay-high-scores-listing-title, .overlay-high-score, .overlay-no-high-scores {
            color: map-get($dark-colors, foreground);
        }        
    }

    .light.overlay-high-scores-listing {
        .overlay-high-scores-listing-title, .overlay-high-score, .overlay-no-high-scores {
            color: map-get($light-colors, foreground);
        }
    }

    .overlay-high-scores-listing-separator {
        flex-basis: 2px;
        height: 100%;
    }

    .dark.overlay-high-scores-listing-separator {
        background-color: map-get($dark-colors, foreground);
    }

    .light.overlay-high-scores-listing-separator {
        background-color: map-get($light-colors, foreground);
    }
}

$overlay-color-maps: (
    dark: (
        0: map-get($dark-colors, red),
        1: map-get($dark-colors, orange),
        2: map-get($dark-colors, yellow),
        3: map-get($dark-colors, green),
        4: map-get($dark-colors, blue),
        5: map-get($dark-colors, violet)
    ),
    light: (
        0: map-get($light-colors, red),
        1: map-get($light-colors, orange),
        2: map-get($light-colors, yellow),
        3: map-get($light-colors, green),
        4: map-get($light-colors, blue),
        5: map-get($light-colors, violet)
    )
);

@each $theme, $color-map in $overlay-color-maps {
    @keyframes #{$theme}GameOverlayTile {
        @for $i from 0 to 5 {
            #{$i * 16% + 4} {
                @include tileBorder(map-get($color-map, $i), map-get($color-map, $i + 1), map-get($color-map, $i + 1), map-get($color-map, $i));
            }

            #{$i * 16% + 8} {
                @include tileBorder(map-get($color-map, $i), map-get($color-map, $i), map-get($color-map, $i + 1), map-get($color-map, $i + 1));
            }

            #{$i * 16% + 12} {
                @include tileBorder(map-get($color-map, $i + 1), map-get($color-map, $i), map-get($color-map, $i), map-get($color-map, $i + 1));
            }
            
            #{$i * 16% + 16} {
                @include tileBorder(map-get($color-map, $i + 1), map-get($color-map, $i + 1), map-get($color-map, $i), map-get($color-map, $i));
            }
        }
    }   
}

.overlay-tile {
    @extend %global-tile;
    width: 0px;
    height: 0px;
    top: 65px;
    position: relative;
}

.dark.overlay-tile {
    @include tileBorder(map-get($dark-colors, foreground), map-get($dark-colors, foreground), map-get($dark-colors, foreground), map-get($dark-colors, foreground));
    animation: darkGameOverlayTile ease 8s infinite;
}

.light.overlay-tile {
    @include tileBorder(map-get($light-colors, foreground), map-get($light-colors, foreground), map-get($light-colors, foreground), map-get($light-colors, foreground));
    animation: lightGameOverlayTile ease 8s infinite;
}

.overlay-tile:first-child {
    left: -20px;
}

.overlay-tile:last-child {
    left: 15px;
}

.overlay-player-name-input-container {
    font-size: 80px;
    margin-bottom: 50px;

    input {
        background: transparent;
        border: none;
        border-bottom: 2px solid;
        font-size: 40px;
        text-align: center;
    }

    input.dark {
        border-bottom-color: map-get($dark-colors, foreground);
        color: map-get($dark-colors, foreground);
    }

    input.light {
        border-bottom-color: map-get($light-colors, foreground);
        color: map-get($light-colors, foreground);
    }

    input, input:focus, input:active, input:hover {
        outline: none;
    }
}