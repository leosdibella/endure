@each $game-mode in 
    game-over,
    new-game,
    player-name,
    paused,
    quit-confirmation,
    select-difficulty,
    high-scores,
    view-mode {
        .overlay-#{$game-mode}-text {
            width: 100%;
            text-decoration: underline;
            letter-spacing: 0.1em;
            display: flex;
            flex-direction: row;
            justify-content: center;
            margin-bottom: 20px;
        }

        .overlay-container.dark-mode .overlay {
            .overlay-#{$game-mode}-text {
                color: map-get($dark-mode-colors, foreground);
            }
        }

        .overlay-container.light-mode .overlay {
            .overlay-#{$game-mode}-text {
                color: map-get($light-mode-colors, foreground);
            }
        }
}

%overlay-flex {
    @extend %global-flex-column;
    @extend %global-centering;
}

.overlay-container {
    @extend %global-full-view-container;
}

.overlay-button-panel {
    @extend %overlay-flex;
}

.overlay-button {
    font-size: 15px;
    outline: none;
    cursor: pointer;
    margin: 10px;
    background: inherit;
    border: none;
    padding: 3px 20px 5px 20px;
    border-width: 1px;
}

.overlay-button:active,
.overlay-button:hover,
.overlay-button:focus {
    outline: none;
}

.dark-mode.overlay-container {
    .overlay {
        background-color: rgba(0, 0, 0, .5);
    }

    .overlay .overlay-button-panel {
        button {
            color: map-get($dark-mode-colors, foreground);
        }

        .overlay-selected-option {
            border-color: map-get($dark-mode-colors, red);
        }
    }
}

.light-mode.overlay-container {
    .overlay {
        background-color: rgba(150, 150, 150, .5);
    }

    .overlay .overlay-button-panel {  
        button {
            color: map-get($light-mode-colors, foreground);
        }

        .overlay-selected-option {
            border-color: map-get($light-mode-colors, red);
        }
    }
}

.overlay {
    @extend %overlay-flex;
    @extend %global-full-view-container;
    font-size: 120px;
    flex: 1;
    position: absolute;
    z-index: 3;
}

.overlay-selected-option {
    font-size: 20px;
    border-radius: 50%;
    border: 1px solid;
    padding: 20px 50px;
}

.overlay-high-score {
    font-size: 20px;
    display: flex;
    flex: 1;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

.overlay-high-scores-listings {
    display: flex;
    flex: 1;
    flex-direction: row;
    width: 100%;

    .overlay-high-scores-listing:first-child {
        font-size: 25px;
    }

    .overlay-high-scores-listing {
        padding: 0px $global-side-bar-width + 5;

        .overlay-high-score {
            border-bottom: 1px solid;
            margin-bottom: 5px;
        }
    }
}

@mixin overlayTileBorder($left-color, $top-color, $right-color, $bottom-color) {
    border-left-color: $left-color;
    border-top-color: $top-color;
    border-right-color: $right-color;
    border-bottom-color: $bottom-color;
}

@each $view-mode-name, $color-map in $color-maps {
    @keyframes #{$view-mode-name}ModeOverlayTile {
        @for $i from 0 to 5 {
            #{$i * 16% + 4} {
                @include overlayTileBorder(map-get($color-map, $i), map-get($color-map, $i + 1), map-get($color-map, $i + 1), map-get($color-map, $i));
            }

            #{$i * 16% + 8} {
                @include overlayTileBorder(map-get($color-map, $i), map-get($color-map, $i), map-get($color-map, $i + 1), map-get($color-map, $i + 1));
            }

            #{$i * 16% + 12} {
                @include overlayTileBorder(map-get($color-map, $i + 1), map-get($color-map, $i), map-get($color-map, $i), map-get($color-map, $i + 1));
            }
            
            #{$i * 16% + 16} {
                @include overlayTileBorder(map-get($color-map, $i + 1), map-get($color-map, $i + 1), map-get($color-map, $i), map-get($color-map, $i));
            }
        }
    }   
}

.overlay-tile {
    @extend %global-tile;
    width: 0px;
    height: 0px;
    top: 50px;
    position: relative;
}

.dark-mode.overlay-tile {
    @include overlayTileBorder(map-get($dark-mode-colors, foreground), map-get($dark-mode-colors, foreground), map-get($dark-mode-colors, foreground), map-get($dark-mode-colors, foreground));
    animation: darkModeOverlayTile ease 8s infinite;
}

.light-mode.overlay-tile {
    @include overlayTileBorder(map-get($light-mode-colors, foreground), map-get($light-mode-colors, foreground), map-get($light-mode-colors, foreground), map-get($light-mode-colors, foreground));
    animation: lightModeOverlayTile ease 8s infinite;
}

.overlay-tile:first-child {
    left: -20px;
}

.overlay-tile:last-child {
    left: 15px;
}